name: Build Windows binary
permissions:
  contents: read

on:
  push:
    branches:
      - release

env:
  APP_RELEASE_VERSION: '0.1'
  PYTHON_VERSION: '3.13.7'

jobs:
  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: $PYTHON_VERSION

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-$PYTHON_VERSION-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-$PYTHON_VERSION-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install offline_folium map files
        run: python -m offline_folium

      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: netseedf.py
          mode: app
          enable-plugins: pyside6
          include-package: netCDF4,cftime
          include-module: netCDF4.utils
          include-data-dir: "C:\\hostedtoolcache\\windows\\Python\\3.13.7\\x64\\Lib\\site-packages\\offline_folium=offline_folium"
          include-data-files: "qwebchannel.js=qwebchannel.js,offline_folium=offline_folium"
          nofollow-import-to: scipy.integrate
          copyright: 'GNU General Public License v3.0'
          #windows-console-mode: disable
          windows-icon-from-ico: 'icon.png'
          company-name: 'Rok Kuk'
          product-name: 'NetSeeDF'
          file-version: $APP_RELEASE_VERSION

      - name: Upload artifact
        id: artifact_upload
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: dist-build-windows
          path: build

      - name: If executable upload fails
        if: failure() && steps.artifact_upload.conclusion == 'failure'
        run: |
          echo "::warning title=Failed-Upload::\
            Executable couldn't upload. \
            Check available storage at: 'settings > billing > Storage for Actions and Packages'."

  build-macos:
    runs-on: macos-14
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: $PYTHON_VERSION

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-$PYTHON_VERSION-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-$PYTHON_VERSION-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install offline_folium map files
        run: python -m offline_folium

      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: netseedf.py
          mode: app
          enable-plugins: pyside6
          include-package: netCDF4,cftime
          include-module: netCDF4.utils
          include-data-dir: "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/offline_folium=offline_folium"
          include-data-files: "qwebchannel.js=qwebchannel.js"
          nofollow-import-to: scipy.integrate
          copyright: 'GNU General Public License v3.0'
          macos-app-protected-resource: "NSDownloadsFolderUsageDescription:ReadNetCDFfile(read-write)"
          macos-app-icon: 'icon.png'
          company-name: 'Rok Kuk'
          macos-app-name: 'NetSeeDF'
          macos-app-version: $APP_RELEASE_VERSION

      - name: Upload artifact
        id: artifact_upload
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: dist-build-macos
          path: build

      - name: If executable upload fails
        if: failure() && steps.artifact_upload.conclusion == 'failure'
        run: |
          echo "::warning title=Failed-Upload::\
            Executable couldn't upload. \
            Check available storage at: 'settings > billing > Storage for Actions and Packages'."

  build-macos-intel:
    runs-on: macos-14-large
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: $PYTHON_VERSION

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-$PYTHON_VERSION-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-$PYTHON_VERSION-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install offline_folium map files
        run: python -m offline_folium

      - name: Remove problematic brew libs
        run: |
          brew remove --force --ignore-dependencies openssl@3
          brew cleanup openssl@3

      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: netseedf.py
          mode: app
          enable-plugins: pyside6
          include-package: netCDF4,cftime,openpyxl
          include-module: netCDF4.utils
          include-data-dir: "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/offline_folium=offline_folium"
          include-data-files: "qwebchannel.js=qwebchannel.js"
          nofollow-import-to: scipy.integrate
          copyright: 'GNU General Public License v3.0'
          macos-app-protected-resource: "NSDownloadsFolderUsageDescription:ReadNetCDFfile(read-write)"
          macos-app-icon: 'icon.png'
          company-name: 'Rok Kuk'
          macos-app-name: 'NetSeeDF'
          macos-app-version: $APP_RELEASE_VERSION

      - name: Upload artifact
        id: artifact_upload
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: dist-build-macos-intel
          path: build

      - name: If executable upload fails
        if: failure() && steps.artifact_upload.conclusion == 'failure'
        run: |
          echo "::warning title=Failed-Upload::\
            Executable couldn't upload. \
            Check available storage at: 'settings > billing > Storage for Actions and Packages'."